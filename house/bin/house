#!/usr/bin/env ruby
class HouseRhyme
  def say
    stanzas.say
  end

  private

  def stanzas
    Stanzas.new
  end
end

class Stanzas
  attr_accessor :said

  def initialize(said=String.new)
    self.said = said
  end

  def collection
    ['house that Jack built.',
     'malt that lay in',
     'rat that ate',
     'cat that killed',
     'dog that worried',
     'cow with the crumpled horn that tossed',
     'maiden all forlorn that milked',
     'man all tattered and torn that kissed',
     'priest all shaven and shorn that married',
     'rooster that crowed in the morn that woke',
     'farmer sowing his corn that kept',
     'horse and the hound and the horn that belonged to']
  end

  def say
    collection.each do |stanza|
      preamble
      puts stanza_builder(stanza)
      pause
    end
  end

  private

  def preamble
    print "This is"
  end

  def pause
    puts ""
  end

  def stanza_builder(stanza_part)
    self.said = Stanza.new(stanza_part).say + self.said
  end
end

class Stanza
  attr_accessor :stanza_part
  def initialize(stanza_part)
    self.stanza_part = stanza_part
  end

  def say
    " " + 'the ' + stanza_part
  end
end

HouseRhyme.new.say
